plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
}

android {
    namespace 'com.example.myjourney'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.myjourney"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding = true
        compose = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation project(":driver:driver_presenter")
    implementation project(":passenger:passenger_presenter")
    implementation project(":common:common_utils")
    implementation Deps.core
    implementation Deps.appCompat
    implementation Deps.material
    implementation Deps.constraint
    implementation Deps.legacy
    implementation LifeCycle.livedata
    testImplementation Tests.jUnit
    androidTestImplementation AndroidTest.jUnit
    androidTestImplementation AndroidTest.espresso

    implementation LifeCycle.viewModel
    implementation LifeCycle.viewModelKtx


    implementation ComposeDeps.activity
    implementation ComposeDeps.ui
    implementation ComposeDeps.uiTooling
    androidTestImplementation AndroidTest.composeJUnit
    debugImplementation DebugDeps.composeUiTooling
    implementation ComposeDeps.material3
    debugImplementation DebugDeps.composeUiManifest

    //  Navigation
    implementation Navigation.fragment
    implementation Navigation.ui

    //Timber
    implementation Deps.timber

    //picasso
    implementation ImageLoader.picasso

    //Glide
//    implementation 'com.github.corouteam:GlideToVectorYou:v2.0.0'
    implementation ImageLoader.glide
    implementation ImageLoader.glideAnnotation
    implementation ImageLoader.glideIntegration
    annotationProcessor ImageLoader.glideCompiler


    //Coroutines
    implementation Coroutine.core
    implementation Coroutine.android
    // Coroutine Lifecycle scope
    implementation LifeCycle.runtime

    // ViewBinding Delegation
    implementation ViewBinding.delegate
    implementation ViewBinding.noreflection


    // Hilt dependencies
    implementation Hilt.android
    kapt Hilt.compiler


    //Dexter
    implementation Permission.dexter


    // Room
    implementation Room.runtime
    annotationProcessor Room.compiler
    // To use Kotlin annotation processing tool (kapt)
    kapt Room.compiler
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation Room.ktx
    // optional - Guava support for Room, including Optional and ListenableFuture
    implementation Room.guavu

    //Paging
    implementation Paging.runtime
    // alternatively - without Android dependencies for tests
    testImplementation Paging.common
    // optional - RxJava2 support
    implementation Paging.rxJava2
    // optional - RxJava3 support
    implementation Paging.rxJava3
    // optional - Guava ListenableFuture support
    implementation Paging.guavu
    // optional - Jetpack Compose integration
    implementation Paging.compose

    //slidView
    implementation SplashDeps.circleIndicator
    implementation Carousel.imageCarousel
    //expansion panel
    implementation Expansion.expansionPanel

    //compressor
    implementation Image.compressor

    //dotsindicator
    implementation SplashDeps.dotsIndicator


}